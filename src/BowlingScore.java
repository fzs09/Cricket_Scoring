
import java.awt.BorderLayout;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author a
 */
public class BowlingScore extends javax.swing.JFrame {

    /**
     * Creates new form BowlingScore
     */
    JTable table_2;
    JFrame frame_2;
    
    public BowlingScore() {
        initComponents();
        
             frame_2 = new JFrame();
    frame_2.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

    Vector<String> row_1 = new Vector<String>();
    row_1.addElement("");
    row_1.addElement("Row1-Column2");
    row_1.addElement("Row1-Column3");
    row_1.addElement("Row1-Column3");
    row_1.addElement("Row1-Column3");
    
    Vector<String> row_2 = new Vector<String>();
    row_2.addElement("");
    row_2.addElement("Row1-Column2");
    row_2.addElement("Row1-Column3");
    row_2.addElement("Row1-Column3");
    row_2.addElement("Row1-Column3");
    
    Vector<String> row_3 = new Vector<String>();
    row_3.addElement("");
    row_3.addElement("Row1-Column2");
    row_3.addElement("Row1-Column3");
    row_3.addElement("Row1-Column3");
    row_3.addElement("Row1-Column3");
    
    Vector<String> row_4 = new Vector<String>();
    row_4.addElement("");
    row_4.addElement("Row1-Column2");
    row_4.addElement("Row1-Column3");
    row_4.addElement("Row1-Column3");
    row_4.addElement("Row1-Column3");
    
    Vector<String> row_5 = new Vector<String>();
    row_5.addElement("");
    row_5.addElement("Row1-Column2");
    row_5.addElement("Row1-Column3");
    row_5.addElement("Row1-Column3");
    row_5.addElement("Row1-Column3");
    
    Vector<String> row_6 = new Vector<String>();
    row_6.addElement("");
    row_6.addElement("Row1-Column2");
    row_6.addElement("Row1-Column3");
    row_6.addElement("Row1-Column3");
    row_6.addElement("Row1-Column3");
    
    Vector<String> row_7 = new Vector<String>();
    row_7.addElement("");
    row_7.addElement("Row1-Column2");
    row_7.addElement("Row1-Column3");
    row_7.addElement("Row1-Column3");
    row_7.addElement("Row1-Column3");
    
    Vector<String> row_8 = new Vector<String>();
    row_8.addElement("");
    row_8.addElement("Row1-Column2");
    row_8.addElement("Row1-Column3");
    row_8.addElement("Row1-Column3");
    row_8.addElement("Row1-Column3");
    
    Vector<String> row_9 = new Vector<String>();
    row_9.addElement("");
    row_9.addElement("Row1-Column2");
    row_9.addElement("Row1-Column3");
    row_9.addElement("Row1-Column3");
    row_9.addElement("Row1-Column3");
    
    Vector<String> row_10 = new Vector<String>();
    row_10.addElement("");
    row_10.addElement("Row1-Column2");
    row_10.addElement("Row1-Column3");
    row_10.addElement("Row1-Column3");
    row_10.addElement("Row1-Column3");
    
    Vector<String> row_11 = new Vector<String>();
    row_11.addElement("");
    row_11.addElement("Row1-Column2");
    row_11.addElement("Row1-Column3");
    row_11.addElement("Row1-Column3");
    row_11.addElement("Row1-Column3");
    
    Vector<String> row_12 = new Vector<String>();
    row_12.addElement("");
    row_12.addElement("");
    row_12.addElement("");
    row_12.addElement("");
    row_12.addElement("");
    
    
    Vector<Vector> rowData = new Vector<Vector>();
    rowData.addElement(row_1);
    rowData.addElement(row_2);
    rowData.addElement(row_3);
    rowData.addElement(row_4);
    rowData.addElement(row_5);
    rowData.addElement(row_6);
    rowData.addElement(row_7);
    rowData.addElement(row_8);
    rowData.addElement(row_9);
    rowData.addElement(row_10);
    rowData.addElement(row_11);
    rowData.addElement(row_12);
    
    
    
    Vector<String> columnNames = new Vector<String>();
    columnNames.addElement("Player Name");
    columnNames.addElement("Overs");
    columnNames.addElement("Wickets");
    columnNames.addElement("Runs ");
    columnNames.addElement("Economy ");
    
     table_2 = new JTable(rowData, columnNames);

    table_2.setValueAt("Extra", 11, 0);    
    
    JScrollPane scrollPane = new JScrollPane(table_2);
    frame_2.add(scrollPane, BorderLayout.CENTER);
    frame_2.setSize(500, 300);
    frame_2.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BowlingScore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BowlingScore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BowlingScore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BowlingScore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BowlingScore().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
